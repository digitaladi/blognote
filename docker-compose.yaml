services:
  nginx:
    #image: nginx:latest #image Docker à utiliser
    build: 
      dockerfile: Dockerfile # fichier dockerfile dasns lequel est crée l'image
      context: ./nginx  # le chemin du dockerfile
    container_name: server-web #nom du conteneur qui va apparaître dans la liste (plutôt que de générer un nom au hasard)
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
    volumes:
      - ./app:/var/www/html/blognote
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php-fpm
      - database_blognote
    links:
      - php-fpm
    #environment : variables d'environnement à passer au conteneur
    #depends_on : si le conteneur dépend d'un autre pour son exécution (ex : une base de données)
    #build : si l'image doit être construite à partir d'un fichier Dockerfile


    
   



  php-fpm:
    build: 
      dockerfile: Dockerfile 
      context: ./php  
    #image: php:8-fpm
    volumes: #volumes à créer entre la machine hôte et le conteneur c'est à dire on aura le meme contenu sur app et sur blognote
      - ./app:/var/www/html/blognote

    depends_on:
      - database_blognote
  




  database_blognote:
    image: mysql:8.0
    container_name: mysql8
    command: --authentication_policy=mysql_native_password #la connexion par default
    restart: always
    env_file:
      - ./environment/.env.blognote
   # environment:
    #  restart: always
     # MYSQL_DATABASE: blognote
     # MYSQL_ROOT_PASSWORD: pass
     # MYSQL_USER: dbuser
     # MYSQL_PASSWORD: dbpassword
    ports:
      - 3306:3306
    volumes:
      - ./mysql:/var/lib/mysql




